# -*- mode: ruby -*-
# # vi: set ft=ruby :

# Require YAML module
require 'yaml'

proxyUrl      = 'http://10.128.9.103:3128'
noProxy       = 'localhost|127.0.0.1'

Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VERSION = "2"

# Read YAML file with box details
servers = YAML.load_file('servers.yaml')

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  ## PLUGINS ##

  # run librarian-puppet to sync required modules before provisioning
  if Vagrant.has_plugin?("vagrant-librarian-puppet")
    config.librarian_puppet.puppetfile_dir = "puppet"
    config.librarian_puppet.placeholder_filename = ".gitignore"
  end

  # Vagrant proxy settings
  # Run: 'vagrant plugin install vagrant-proxyconf' before use
  # With it you can specify the Apt proxy globally in $HOME/.vagrant.d/Vagrantfile without the need to configure every single machine.
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = proxyUrl
    config.proxy.https    = proxyUrl
    config.proxy.no_proxy = noProxy

    # VM proxy settings (wget, curl, yum, etc.). This configuration will be written to /etc/profile.d/proxy.sh on the guest.
    #config.env_proxy.http     = proxyUrl
    #config.env_proxy.https    = proxyUrl
    #config.env_proxy.no_proxy = noProxy
  end

  # caching apt
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  # use vagrant-hosts-provisioner to update /etc/hosts file
  if Vagrant.has_plugin?("vagrant-hosts-provisioner")
    config.vm.provision :hostsupdate, run: 'always' do |host|
      host.hostname = "wordpress"
      host.manage_guest = true
      host.manage_host = true
      host.aliases = [
        "wordpress.example.com"
      ]
      #    host.files = [
      #      'config/hosts.json'
      #    ]
    end
  end

  ## PROVISIONING ##

  # any additional provision commands can be placed here to run after
  # default provision from above
  if File.exists?("shell/local-bootstrap.sh")
    config.vm.provision "shell" do |s|
      s.path = "shell/local-bootstrap.sh"
      # example passing parameter to bootstrap script
      #s.args = "Hello World!"
    end
  end

  # Iterate through entries in YAML file
  servers.each do |servers|
    # configure machine
    config.vm.define servers["name"] do |srv|

      srv.vm.box = servers["box"]
      srv.vm.box_url = servers["boxUrl"]
      srv.vm.hostname = servers["name"]
      srv.vm.network "private_network", ip: servers["ip"]

      srv.vm.provider :virtualbox do |vb|
        vb.name = servers["name"]
        vb.memory = servers["ram"]
      end

      # configure uppet provisioning
      srv.vm.provision :puppet do |puppet|
        # Set some custom "facts" for Puppet manifest(s)/modules to use.
        puppet.facter = {
          "vagrant"       => "1",
          "fqdn"          => "wordpress.example.com"
        }
        puppet.manifests_path = "manifests"
        puppet.manifest_file  = "site.pp"
        puppet.module_path    = ["modules", "roles_profiles"]
        puppet.options = "--verbose"
        # puppet.options = "--verbose --debug"
        puppet.hiera_config_path = "hiera.yaml"
      end

      # Success message
     # srv.vm.provision "shell", inline: servers["message"]
    end
  end
end
