description = 'Xmdlab jee framework'

ext.libraryVersions = [
	javaee		: '7.0',
	junit		: '4.11',
	querydsl	: '3.6.0'
]

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

configurations {
    querydslapt
}

dependencies {
	compile 'org.slf4j:slf4j-simple:1.7.7'
	compile "javax:javaee-api:${libraryVersions.javaee}"
	compile "com.mysema.querydsl:querydsl-jpa:$libraryVersions.querydsl"
	
	querydslapt "com.mysema.querydsl:querydsl-apt:$libraryVersions.querydsl"
	
	testCompile "junit:junit:${libraryVersions.junit}"
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

sourceSets.main.java.srcDir 'src/main/generated'

//uploadArchives {
//	repositories.mavenDeployer {
//		pom.artifactId = 'org.xmdlab.framework.jee'
//		pom.groupId = 'org.xmdlab.framework'
//		pom.version = '0.1.0-SNAPSHOT'
//		
//		configuration = configurations.deployerJars
//		
//		repository(url: "http://dzstuv193.dzbw.de:8080/nexus/content/repositories/releases/") {
//			authentication(userName: nexusUser, password: nexusPassword)
//		}
//		repository(url: "http://dzstuv193.dzbw.de:8080/nexus/content/repositories/snapshots/") {
//			authentication(userName: nexusUser, password: nexusPassword)
//		}
//	}
//}