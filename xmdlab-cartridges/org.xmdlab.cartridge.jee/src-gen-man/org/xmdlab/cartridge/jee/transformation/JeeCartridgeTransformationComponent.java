/**
 * Generated by Xgen. !!! DO NOT EDIT BY HAND IF THIS FILE WAS GENERATED TO A DERIVED DIRECTORY !!!
 * Xtend Template: org.xmdlab.cartridge.generator.dsl.templates.transformation.CartridgeTransformationComponentTpl
 */
package org.xmdlab.cartridge.jee.transformation;

import java.util.Collection;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.mwe.core.WorkflowContext;
import org.eclipse.emf.mwe.core.issues.Issues;
import org.eclipse.emf.mwe.core.lib.AbstractWorkflowComponent2;
import org.eclipse.emf.mwe.core.monitor.ProgressMonitor;
import org.eclipse.xtext.resource.XtextResource;

import com.google.common.collect.Iterables;

public class JeeCartridgeTransformationComponent extends
		AbstractWorkflowComponent2 {

	private String modelSlot;
	private String outputSlot;

	public void setModelSlot(String modelSlot) {
		this.modelSlot = modelSlot;
	}

	public void setOutputSlot(String outputSlot) {
		this.outputSlot = outputSlot;
	}

	@Override
	protected void checkConfigurationInternal(Issues issues) {
		checkRequiredConfigProperty("modelSlot", modelSlot, issues);
		checkRequiredConfigProperty("outputSlot", outputSlot, issues);
	}

	@Override
	protected void invokeInternal(WorkflowContext ctx, ProgressMonitor monitor,
			Issues issues) {
		Collection<?> slotContent = (Collection<?>) ctx.get(modelSlot);
		if (slotContent == null) {
			issues.addError(String.format("Slot %s is empty", modelSlot));
			return;
		}

		org.xmdlab.dsl.application.applicationDsl.DslModel dslModel = null;
		for (Resource r : Iterables.filter(slotContent, XtextResource.class)) {
			// load model from ecore resource
			dslModel = (org.xmdlab.dsl.application.applicationDsl.DslModel) r
					.getContents().get(0);
		}

		// check model is loaded
		if (dslModel == null) {
			throw new RuntimeException(
					"Unable to load domainmodel from resource");
		}

		// execute the transformation
		org.xmdlab.jee.application.mm.MmApplication transformed = new org.xmdlab.cartridge.jee.transformation.JeeCartridgeTransformation()
				.transform(dslModel.getApp());

		// Create EMF resource
		ResourceSet rs = new ResourceSetImpl();
		Resource resource = rs.createResource(URI
				.createURI(org.xmdlab.jee.application.mm.MmPackage.eNS_URI));

		// Add transformed metamodel to resource
		resource.getContents().add(transformed);

		// set result in slot
		ctx.set(outputSlot, resource);
	}
}
