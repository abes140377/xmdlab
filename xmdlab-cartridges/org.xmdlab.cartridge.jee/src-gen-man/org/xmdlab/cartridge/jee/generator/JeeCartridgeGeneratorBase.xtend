/**
 * Generated by Xgen. !!! DO NOT EDIT BY HAND IF THIS FILE WAS GENERATED TO A DERIVED DIRECTORY !!!
 * Xtend Template: org.xmdlab.cartridge.generator.dsl.templates.generator.CartridgeGeneratorBaseXtendTpl
 */
package org.xmdlab.cartridge.jee.generator

import com.google.inject.Inject
import com.google.inject.Provider
import org.eclipse.xtext.generator.IFileSystemAccess
import org.xmdlab.cartridge.common.generator.IGenerator
import org.xmdlab.cartridge.jee.templates.ReadmeMdTpl

/**
 * The JeeCartridgeGeneratorBase
 *
 * @author Sebastian Freund<seba1403@googlemail.com>
 *
 */
abstract class JeeCartridgeGeneratorBase implements IGenerator {

	//	@Inject JeeCartridgeProjectProperties properties
	@Inject Provider<ReadmeMdTpl> readmeMdTpl

	/**
	* This method is a long sequence of calling all templates for the code generation
	*/
	override void doGenerate(IFileSystemAccess fsa) {
		// compile templates
		beforeCompileReadmeMd()
		compileReadmeMd(fsa)
		afterCompileReadmeMd()
	}

	/**
	 *
	 */
	def void beforeCompileReadmeMd() {}

	/**
	 *
	 */
	def compileReadmeMd(IFileSystemAccess fsa) {
		val ReadmeMdTpl tpl = readmeMdTpl.get

		val String fileName = "README.md"

		//fsa.generateFile(fileName, OUTPUTCONFIG_BASE, tpl.generate())
		fsa.generateFile(fileName, tpl.generate())
	}

	/**
	 *
	 */
	def void afterCompileReadmeMd() {}
}
