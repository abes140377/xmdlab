Cartridge puppet {
	Properties {
		PropertyGroup site {
			Property proxyHost required = false {
				"The proxy hostname or ip address required for connecting to the internet."
			}
			Property proxyPort required = false default = "8080" {
				"The proxy port"
			}
			Property nonProxyHosts required = false default = "localhost|127.0.0.1" {
				"Comma separated list of host. E.g.: localhost,127.0.0.1,192.168.178.0/16,.domain.com"
			}
		}
		PropertyGroup vagrant {
			Property vmBox required = true default = "precise64" {
				"The Vagrant VM Box to use when 'vagrant up'"
			}
			Property vmBoxUrl required = true default = "http://files.vagrantup.com/precise64.box" {
				"The Vagrant VM Box to use when 'vagrant up'"
			}
			Property vmBoxRam required = true default = "512" {
				"The amount of RAM for a box"
			}
			
			Property useCachier required = false default = "false" {
				"Set to true to use vagrant-cachier plugin for caching apt packages between box startup"
			}
		}
	}
	
	Transformation input = org.xmdlab.dsl.domain.domainDsl.DslDomain output = org.xmdlab.puppet.site.mm.MmSite
	
	// model metafacade (root)
	Metafacade siteMetafacade modelElement = org.xmdlab.puppet.site.mm.MmSite {
		facadeMethode requireProxyConf type = "boolean"
		facadeMethode requireCachierConf type = "boolean"
	}
	
	Metafacade nodeMetafacade modelElement = org.xmdlab.puppet.site.mm.MmNode {
		
	}
	
	Metafacade roleMetafacade modelElement = org.xmdlab.puppet.site.mm.MmRole {
		
	}
	
	Metafacade profileMetafacade modelElement = org.xmdlab.puppet.site.mm.MmProfile {
		
	}
		
	Outlet base outputDirectory 			= '..' 								overwrite = false createOutputDirectory = true
	Outlet site outputDirectory 			= '../site'							overwrite = false createOutputDirectory = true
	Outlet profileManifests outputDirectory = '../modules/profile/manifests' 	overwrite = false createOutputDirectory = true
	
	Template path = "templates/ReadmeMdTpl" outputPattern = "README.md" outlet = base overwrite = true {
		ModelElement type = siteMetafacade {
			
		}
	}
	
	Template path = "templates/VagrantfileTpl" outputPattern = "Vagrantfile" outlet = site overwrite = true {
		ModelElement type = siteMetafacade {
			
		}
	}
	
	Template path = "templates/ServersYamlTpl" outputPattern = "servers.yaml" outlet = site overwrite = true {
		ModelElement type = siteMetafacade {
			
		}
	}
	
	Template path = "templates/SitePpTpl" outputPattern = "manifests/site.pp" outlet = site overwrite = true {
		ModelElement type = siteMetafacade {
			
		}
	}
	
	// Role
	Template path = "templates/RoleManifestInitPpTpl" outputPattern = "modules/role/manifests/init.pp" outlet = site {
		ModelElement type = siteMetafacade {
			
		}
	}
	
	Template path = "templates/RoleManifestPpTpl" outlet = site overwrite = true {
		ModelElement type = roleMetafacade {
			
		}
	}
	
	// Profile
	Template path = "templates/ProfileManifestBasePpTpl" outputPattern = "modules/profile/manifests/base.pp" outlet = site {
		ModelElement type = siteMetafacade {
			
		}
	}
	
	Template path = "templates/ProfileManifestPpTpl" outlet = site {
		ModelElement type = profileMetafacade {
			
		}
	}
	
	// Resource path = "resources/local-bootstrap.sh" outputPattern = "shell/local-bootstrap.sh" outlet = site
	
	// Task test {
	//	 ModelElement type = profileMetafacade {
	//	 	
	//	 }
	// }
}