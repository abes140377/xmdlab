/**
 * Generated by Xgen. !!! DO NOT EDIT BY HAND IF THIS FILE WAS GENERATED TO A DERIVED DIRECTORY !!!
 * Xtend Template: org.xmdlab.cartridge.generator.dsl.templates.generator.CartridgeGeneratorXtendTpl
 */
package org.xmdlab.cartridge.puppet.generator

import org.eclipse.xtext.generator.IFileSystemAccess
import org.xmdlab.puppet.site.mm.MmSite
import org.xmdlab.puppet.site.mm.MmRole
import org.xmdlab.puppet.site.mm.MmProfile

/**
 * The PuppetCartridgeGenerator
 *
 * @author Sebastian Freund<seba1403@googlemail.com>
 *
 */
class PuppetCartridgeGenerator extends PuppetCartridgeGeneratorBase {

	override doGenerate(MmSite mmSite, IFileSystemAccess fsa) {
		// compile templates
		compileReadmeMd(fsa, mmSite)
		compileVagrantfile(fsa, mmSite)
		compileServersYaml(fsa, mmSite)
		compileSitePp(fsa, mmSite)
		
		// nodes
		
		// roles
		compileRoleManifestInitPp(fsa, mmSite)
		mmSite.eAllContents.filter(MmRole).forEach[compileRoleManifestPp(fsa, it)]
		
		// profiles
		compileProfileManifestBasePp(fsa, mmSite)
		mmSite.eAllContents.filter(MmProfile).forEach[compileProfileManifestPp(fsa, it)]
	}
	
	override getRoleManifestPpOutputPattern(MmRole mmRole) {
		return "modules/role/manifests/" + mmRole.name + ".pp"
	}
	
	override getProfileManifestPpOutputPattern(MmProfile mmProfile) {
		return "modules/profile/manifests/" + mmProfile.name.replaceAll("::", "/") + ".pp"
	}
	
}
