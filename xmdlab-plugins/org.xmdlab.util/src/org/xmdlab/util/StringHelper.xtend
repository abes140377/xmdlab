package org.xmdlab.util

import com.google.common.base.CaseFormat

/**
 * 
 */
class StringHelper {
	
	/**
	 * 
	 * @param path
	 */
	def static String getLastSegmentOfPath(String path) {
		return path.substring(path.lastIndexOf("/") + 1)
	}
	
	/**
	 * Convert java package to filesystem path
	 * @param javaPackage
	 * @return
	 */
	def static String javaPackageToFsPath(String javaPackage) {
		return javaPackage.replace(".", "/")
	}
	
	/**
	 * 
	 */
	def static camelCaseToUnderscore(String input) {
		CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_UNDERSCORE, input);
	}
	
	/**
	 * 
	 * 
	 * @param classname
	 * @return
	 */
	def static String getClassComment(String classname) {
		return getClassComment(classname, null)
	}
	
	/**
	 * 
	 * @return
	 */
	def static String getGeneratedComment(String templateName) {
		var StringBuilder builder = new StringBuilder()
		
		builder.append("/**\n")
		builder.append(" * Generated by Xgen. !!! DO NOT EDIT BY HAND IF THIS FILE WAS GENERATED TO A DERIVED DIRECTORY !!!" + "\n")
		builder.append(" * Xtend Template: " + templateName + "\n")
		builder.append(" */")
		
		return builder.toString();
	}
	
	/**
	 * 
	 * 
	 * @param classname
	 * @return
	 */
	def static String getClassComment(String classname, String comment) {
		var StringBuilder builder = new StringBuilder()
		
		builder.append("/**\n")
		if(comment.nullOrEmpty)
			builder.append(" * The " + classname + "\n")
		else
			builder.append(" * " + comment + "\n")
		builder.append(" *\n")
		builder.append(" * @author Xmdlab generator\n")
		builder.append(" *\n")
		builder.append(" */")
		
		/**
		 * 
		 * @author Sebastian Freund<abes140377@web.de>
		 * 
		 */
		
		return builder.toString();
	}
}