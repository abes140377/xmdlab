/*
* generated by Xtext
*/
package org.xmdlab.dsl.puppet.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue
import org.xmdlab.dsl.puppet.validation.IssueCodes
import org.xmdlab.dsl.puppet.puppetDsl.DslNode

//import static extension org.eclipse.xtext.EcoreUtil2.*
//import org.eclipse.xtext.diagnostics.Diagnostic
//import org.xmdlab.dsl.puppet.puppetDsl.DslRole
//import org.xmdlab.dsl.puppet.puppetDsl.DslModel
//import org.xmdlab.dsl.puppet.puppetDsl.PuppetDslFactory

/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class PuppetDslQuickfixProvider extends DefaultQuickfixProvider {

	@Fix(IssueCodes::UNCAPITALIZED_NAME)
	def void uncapitalizeDslNodeNameFirstLetter(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
			issue,
			"Uncapitalize first letter", // label
			"Uncapitalize first letter of '" + issue.data.get(0) + "'", // description 
			"Attribute.gif", // icon
			[element, context|(element as DslNode).name = issue.data.get(0).toFirstLower]
		);
	}

//	@Fix(Diagnostic::LINKING_DIAGNOSTIC)
//	def void createMissingRole(Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, "Create missing role", "Create missing role", "Entity.gif",
//			[ element, context |
//				val currentRole = element.getContainerOfType(typeof(DslRole))
////				val model = currentRole.eContainer as DslModel
//				currentRole.profiles.add(currentRole.profiles.indexOf(currentRole) + 1,
//					PuppetDslFactory::eINSTANCE.createDslProfile() => [
//						name = context.xtextDocument.get(issue.offset,
//							issue.length)
//					])
//			]);
//	}

}
