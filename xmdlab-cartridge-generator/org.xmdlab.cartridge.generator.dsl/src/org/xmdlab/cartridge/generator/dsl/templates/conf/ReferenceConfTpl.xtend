package org.xmdlab.cartridge.generator.dsl.templates.conf

import com.google.inject.Inject
import org.xmdlab.cartridge.generator.dsl.cartridgeDsl.DslCartridge
import org.xmdlab.cartridge.generator.dsl.generator.GeneratorProperties

import static extension org.xmdlab.cartridge.generator.dsl.util.ModelHelper.*
import org.xmdlab.cartridge.generator.dsl.util.ModelHelper
import org.xmdlab.cartridge.generator.dsl.cartridgeDsl.DslProperty

/**
 * 
 */
class ReferenceConfTpl {

	@Inject extension GeneratorProperties generatorProperties
	@Inject extension ModelHelper modelHelper

	/**
	 * 
	 */
	def generate(DslCartridge dslCartridge) '''
		# Generated by Xgen. !!! DO NOT EDIT BY HAND IF THIS FILE WAS GENERATED TO A DERIVED DIRECTORY !!!;
		# Xtend Template: «this.class.name»
		#
		# These is the configuration file with the default values for the «cartridgeName» cartride. 
		# These values are use when you generate a project from this carridge
		
		«FOR pgMap : dslCartridge.propertyGroupMap.entrySet»
		«pgMap.key» : {
			«FOR p : pgMap.value»
			
			# «p.documentation»
			«getConfigEntry(p)»
			«ENDFOR»
		}
		«ENDFOR»
	'''
	
	def getConfigEntry(DslProperty dslProperty) {
		if(dslProperty.required.asBoolean && dslProperty.^default.nullOrEmpty) {
			return '# ' + dslProperty.name + ' : ' + ' (property is required and has no default, so no value here)'
		}
		if(dslProperty.required.asBoolean && !dslProperty.^default.nullOrEmpty) {
			return dslProperty.name + ' : "' + dslProperty.^default + '"'
		}
		if(!dslProperty.^default.nullOrEmpty)
			return dslProperty.name + ' : "' + dslProperty.^default + '"'
		
		if(dslProperty.^default.nullOrEmpty && !dslProperty.required.asBoolean)
			return dslProperty.name + ' : ' + '""'
	}
	
}
