package org.xmdlab.cartridge.generator.dsl.util;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.eclipse.core.runtime.Path;

import com.google.common.base.Strings;

/**
 * 
 * @author seba
 *
 */
public class StringHelper {
	
	private static final String AUTHOR_NAME = "Sebastian Freund";
	private static final String AUTHOR_EMAIL = "seba1403@googlemail.com";
	
	public static boolean isNotSet(String s) {
		return s == null || s.equals("");
	}
	
	public static boolean isSet(String s) {
		return s != null && !s.equals("");
	}
	
	public static String getNameFromClass(String clazz) {
		Class<?> tClass;
		try {
			tClass = Class.forName(clazz);
			
			return tClass.getName();
		} catch (ClassNotFoundException e) {
			throw new RuntimeException("Unable to get class name from " + clazz, e);
		}
	}
	
	/**
	 * 
	 * @param path
	 */
	public static String getLastSegmentOfPath(String path) {
		return path.substring(path.lastIndexOf(Path.SEPARATOR) + 1);
	}
	
	/**
	 * Convert java package to filesystem path
	 * @param javaPackage
	 * @return
	 */
	public static String javaToFsPath(String javaPackage) {
		return javaPackage.replace(".", "/");
	}

	/**
	 * Convert a camel case string to an upper case underscore string
	 * 
	 * @param str
	 * @return
	 */
	public static String camelCaseToUnderscore(String inputString) {
		Pattern p = Pattern.compile("\\p{Lu}");
		Matcher m = p.matcher(inputString);
		StringBuffer sb = new StringBuffer();
		while (m.find()) {
			m.appendReplacement(sb, "_" + m.group());
		}
		m.appendTail(sb);
		String tmp = sb.toString().trim();
		
		if(tmp.startsWith("_"))
			tmp = tmp.substring(1);

		return tmp.toUpperCase();
	}
	
	/**
	 * 
	 * @return
	 */
	public static String getGeneratedComment(String templateName) {
		StringBuilder builder = new StringBuilder();
		
		builder.append("/**\n");
		builder.append(" * Generated by Xgen. !!! DO NOT EDIT BY HAND IF THIS FILE WAS GENERATED TO A DERIVED DIRECTORY !!!" + "\n");
		builder.append(" * Xtend Template: " + templateName + "\n");
		builder.append(" */");
		
		return builder.toString();
	}
	
	/**
	 * 
	 * 
	 * @param classname
	 * @return
	 */
	public static String getClassComment(String classname) {
		return getClassComment(classname, null);
	}

	/**
	 * 
	 * 
	 * @param classname
	 * @return
	 */
	public static String getClassComment(String classname, String comment) {
		StringBuilder builder = new StringBuilder();
		
		builder.append("/**\n");
		if(Strings.isNullOrEmpty(comment))
			builder.append(" * The " + classname + "\n");
		else
			builder.append(" * " + comment + "\n");
		builder.append(" *\n");
		builder.append(" * @author " + AUTHOR_NAME + "<" + AUTHOR_EMAIL + ">\n");
		builder.append(" *\n");
		builder.append(" */");
		
		/**
		 * 
		 * @author Sebastian Freund<abes140377@web.de>
		 * 
		 */
		
		return builder.toString();
	}
}