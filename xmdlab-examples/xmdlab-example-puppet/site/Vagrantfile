# -*- mode: ruby -*-
# # vi: set ft=ruby :
proxyUrl      = 'http://10.128.9.103:3128'
noProxy       = 'localhost|127.0.0.1'

Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VERSION = "2"

# Require YAML module
require 'yaml'
 
# Read YAML file with box details
servers = YAML.load_file('servers.yaml')

# Create boxes
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Vagrant proxy settings
  # Run: 'vagrant plugin install vagrant-proxyconf' before use
  # With it you can specify the Apt proxy globally in $HOME/.vagrant.d/Vagrantfile without the need to configure every single machine.
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = proxyUrl
    config.proxy.https    = proxyUrl
    config.proxy.no_proxy = noProxy
    
    # VM proxy settings (wget, curl, yum, etc.). This configuration will be written to /etc/profile.d/proxy.sh on the guest.
    config.env_proxy.http     = proxyUrl
    config.env_proxy.https    = proxyUrl
    config.env_proxy.no_proxy = noProxy
  end
  # caching apt
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
  # any additional provision commands can be placed here to run after
  # default provision from above
  if File.exists?("shell/local-bootstrap.sh")
    config.vm.provision "shell" do |s|
      s.path = "shell/local-bootstrap.sh"
      # example passing parameter to bootstrap script
      #s.args = "Hello World!"
    end
  end
  # Iterate through entries in YAML file
  servers.each do |servers|
  	# configure machine
    config.vm.define servers["name"] do |srv|
      srv.vm.box = servers["box"]
      srv.vm.box_url = servers["boxUrl"]
      srv.vm.hostname = servers["name"]
      srv.vm.network "private_network", ip: servers["ip"]
      srv.vm.provider :virtualbox do |vb|
        vb.name = servers["name"]
        vb.memory = servers["ram"]
      end
      # configure uppet provisioning
      srv.vm.provision :puppet do |puppet|
        puppet.manifests_path = "manifests"
        puppet.manifest_file  = "site.pp"
        puppet.module_path    = "modules"
      end
    end
  end
end	
